# This file is a template, and might need editing before it works on your project.
# use the official gcc image, based on debian
# can use verions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/


build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  # before_script: 
  #   - apt update && apt -y install make autoconf 
  script: 
    - mkdir .build
    - x86_64-w64-mingw32-gcc -c  Proyecto\ final/main.c -o main.o -m32
    - cp main.o .build
    - x86_64-w64-mingw32-windres -i Proyecto\ final/sounds.rc -o sounds.res -F pe-i386 -O coff
    - cp sounds.res .build
    - cd .build
    - x86_64-w64-mingw32-gcc main.o sounds.res -o juego.exe -static-libgcc -lwinmm -m32
    - cp juego.exe /var/www/html/juego
  # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
  # cache:
  #   paths:
  #     - "*.o"


